# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import List, Optional
from datetime import datetime
from typing_extensions import Literal, TypeAlias

from pydantic import Field as FieldInfo

from .._models import BaseModel

__all__ = ["RfgeolocationListResponse", "RfgeolocationListResponseItem"]


class RfgeolocationListResponseItem(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    order_id: str = FieldInfo(alias="orderId")
    """The order identifier for this RF Geo Location data set."""

    received_ts: datetime = FieldInfo(alias="receivedTs")
    """
    The time representing the mean of the constituent single-burst observations in
    ISO 8601 UTC with microsecond precision.
    """

    source: str
    """Source of the data."""

    start_time: datetime = FieldInfo(alias="startTime")
    """
    The order start time for this RF Geo Location data set in ISO 8601 UTC with
    microsecond precision.
    """

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    agjson: Optional[str] = None
    """
    Geographical region or polygon (lat/lon pairs), as depicted by the GeoJSON
    representation of the geometry/geography, of the image as projected on the
    ground. GeoJSON Reference: https://geojson.org/. Ignored if included with a POST
    or PUT request that also specifies a valid 'area' or 'atext' field.
    """

    alg_version: Optional[str] = FieldInfo(alias="algVersion", default=None)
    """The RFGeo algorithm type and version used in geolocation calculations."""

    andims: Optional[int] = None
    """Number of dimensions of the geometry depicted by region."""

    asrid: Optional[int] = None
    """Geographical spatial_ref_sys for region."""

    atext: Optional[str] = None
    """
    Geographical region or polygon (lon/lat pairs), as depicted by the Well-Known
    Text representation of the geometry/geography, of the image as projected on the
    ground. WKT reference: https://www.opengeospatial.org/standards/wkt-crs. Ignored
    if included with a POST or PUT request that also specifies a valid 'area' field.
    """

    atype: Optional[str] = None
    """Type of region as projected on the ground."""

    center_freq: Optional[float] = FieldInfo(alias="centerFreq", default=None)
    """The detected signal frequency in megahertz."""

    conf_area: Optional[float] = FieldInfo(alias="confArea", default=None)
    """
    The area of the confidence ellipse specified in meters squared to contain the
    emitter with a 95% probability.
    """

    conf_orientation: Optional[float] = FieldInfo(alias="confOrientation", default=None)
    """
    Confidence ellipse orientation of semi-major axis about the detection location
    lat/lon point measured in degrees.
    """

    conf_semi_major: Optional[float] = FieldInfo(alias="confSemiMajor", default=None)
    """
    Confidence ellipse semi-major axis about the detection location lat/lon point
    measured in meters.
    """

    conf_semi_minor: Optional[float] = FieldInfo(alias="confSemiMinor", default=None)
    """
    Confidence ellipse semi-minor axis about the detection location lat/lon point
    measured in meters.
    """

    constellation: Optional[str] = None
    """The name of the satellite constellation."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    created_ts: Optional[datetime] = FieldInfo(alias="createdTs", default=None)
    """
    Specifies the creation time associated with the order in ISO 8601 UTC with
    microsecond precision.
    """

    detect_alt: Optional[float] = FieldInfo(alias="detectAlt", default=None)
    """The altitude relative to WGS-84 ellipsoid, in meters."""

    detect_lat: Optional[float] = FieldInfo(alias="detectLat", default=None)
    """WGS-84 latitude of the most likely emitter location coordinate point, in
    degrees.

    -90 to 90 degrees (negative values south of equator).
    """

    detect_lon: Optional[float] = FieldInfo(alias="detectLon", default=None)
    """
    WGS-84 longitude of the most likely emitter location coordinate point, in
    degrees. -180 to 180 degrees (negative values west of Prime Meridian).
    """

    end_time: Optional[datetime] = FieldInfo(alias="endTime", default=None)
    """
    The order end time for this RF Geo Location data set in ISO 8601 UTC with
    microsecond precision.
    """

    external_id: Optional[str] = FieldInfo(alias="externalId", default=None)
    """Optional ID from external systems.

    This field has no meaning within UDL and is provided as a convenience for
    systems that require tracking of an internal system generated ID.
    """

    id_on_orbit: Optional[str] = FieldInfo(alias="idOnOrbit", default=None)
    """
    Unique identifier of the satellite used to identify and geolocate RF signals of
    interest. This ID can be used to obtain additional information on an OnOrbit
    object using the 'get by ID' operation (e.g. /udl/onorbit/{id}). For example,
    the onorbit object with idOnOrbit = abc would be queried as /udl/onorbit/abc.
    """

    id_rf_emitter: Optional[str] = FieldInfo(alias="idRFEmitter", default=None)
    """
    Optional identifier of the geolocated signal of interest RF Emitter for this
    observation. This ID can be used to obtain additional information on an RF
    Emitter object using the 'get by ID' operation (e.g. /udl/rfemitter/{id}). For
    example, the rfemitter object with idRFEmitter = abc would be queried as
    /udl/rfemitter/abc.
    """

    max_freq: Optional[float] = FieldInfo(alias="maxFreq", default=None)
    """The maximum detected frequency in megahertz."""

    min_freq: Optional[float] = FieldInfo(alias="minFreq", default=None)
    """The minimum detected frequency in megahertz."""

    num_bursts: Optional[int] = FieldInfo(alias="numBursts", default=None)
    """The count of single-burst observations used for this geolocation observation."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    orig_object_id: Optional[str] = FieldInfo(alias="origObjectId", default=None)
    """
    Optional identifier of the satellite used to identify and geolocate RF signals
    of interest of this observation. This may be an internal identifier and not
    necessarily a valid satellite number.
    """

    orig_rf_emitter_id: Optional[str] = FieldInfo(alias="origRFEmitterId", default=None)
    """Optional identifier of the emitter of interest for this observation.

    This may be an internal identifier and not necessarily a valid emitter Id.
    """

    pass_group_id: Optional[str] = FieldInfo(alias="passGroupId", default=None)
    """
    Optional external identifier referencing the entity used in the calculation of
    the geolocation.
    """

    sat_no: Optional[int] = FieldInfo(alias="satNo", default=None)
    """Satellite/catalog number of the target on-orbit object."""

    signal_of_interest: Optional[str] = FieldInfo(alias="signalOfInterest", default=None)
    """The name of the signal of interest."""

    source_dl: Optional[str] = FieldInfo(alias="sourceDL", default=None)
    """The source data library from which this record was received.

    This could be a remote or tactical UDL or another data library. If null, the
    record should be assumed to have originated from the primary Enterprise UDL.
    """

    tags: Optional[List[str]] = None
    """
    Optional array of provider/source specific tags for this data, where each
    element is no longer than 32 characters, used for implementing data owner
    conditional access controls to restrict access to the data. Should be left null
    by data providers unless conditional access controls are coordinated with the
    UDL team.
    """


RfgeolocationListResponse: TypeAlias = List[RfgeolocationListResponseItem]
