# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import List, Union, Iterable
from datetime import datetime
from typing_extensions import Literal, Required, Annotated, TypedDict

from .._utils import PropertyInfo
from .elset_ingest_param import ElsetIngestParam
from .state_vector_ingest_param import StateVectorIngestParam

__all__ = ["ManeuverCreateBulkV2Params", "Body"]


class ManeuverCreateBulkV2Params(TypedDict, total=False):
    body: Required[Iterable[Body]]


class Body(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    event_start_time: Required[Annotated[Union[str, datetime], PropertyInfo(alias="eventStartTime", format="iso8601")]]
    """Maneuver event start time in ISO 8601 UTC with microsecond precision.

    For maneuvers without start and end times, the start time is considered to be
    the maneuver event time.
    """

    source: Required[str]
    """Source of the data."""

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    algorithm: str
    """Optional algorithm used to produce this record."""

    characterization: str
    """Optional purpose of the maneuver if known (e.g.

    North-South Station Keeping, East-West Station Keeping, Longitude Shift,
    Unknown).
    """

    characterization_unc: Annotated[float, PropertyInfo(alias="characterizationUnc")]
    """
    Uncertainty in the characterization or purpose assessment of this maneuver (0 -
    1).
    """

    cov: Iterable[float]
    """
    Optional maneuver cross-track/radial/in-track covariance array, in meter and
    second based units, in the following order: CR_R, CI_R, CI_I, CC_R, CC_I, CC_C,
    CT_R, CT_I, CT_C, CT_T.
    """

    delta_mass: Annotated[float, PropertyInfo(alias="deltaMass")]
    """Difference in mass before and after the maneuver, in kg."""

    delta_pos: Annotated[float, PropertyInfo(alias="deltaPos")]
    """
    Magnitude, in km, of the difference in the pre- and post-maneuver position
    vectors at the maneuver event time.
    """

    delta_pos_u: Annotated[float, PropertyInfo(alias="deltaPosU")]
    """
    Magnitude, in km, of the difference in the pre- and post-maneuver position
    vectors in the direction of the pre-maneuver 'U' unit vector at the maneuver
    event time.
    """

    delta_pos_v: Annotated[float, PropertyInfo(alias="deltaPosV")]
    """
    Magnitude, in km, of the difference in the pre- and post-maneuver position
    vectors in the direction of the pre-maneuver 'V' unit vector at the maneuver
    event time.
    """

    delta_pos_w: Annotated[float, PropertyInfo(alias="deltaPosW")]
    """
    Magnitude, in km, of the difference in the pre- and post-maneuver position
    vectors in the direction of the pre-maneuver 'W' unit vector at the maneuver
    event time.
    """

    delta_vel: Annotated[float, PropertyInfo(alias="deltaVel")]
    """
    Magnitude, in km/sec, of the difference in the pre- and post-maneuver velocity
    vectors at the maneuver event time.
    """

    delta_vel_u: Annotated[float, PropertyInfo(alias="deltaVelU")]
    """
    Magnitude, in km/sec, of the difference in the pre- and post-maneuver velocity
    vectors in the direction of the pre-maneuver 'U' unit vector at the maneuver
    event time.
    """

    delta_vel_v: Annotated[float, PropertyInfo(alias="deltaVelV")]
    """
    Magnitude, in km/sec, of the difference in the pre- and post-maneuver velocity
    vectors in the direction of the pre-maneuver 'V' unit vector at the maneuver
    event time.
    """

    delta_vel_w: Annotated[float, PropertyInfo(alias="deltaVelW")]
    """
    Magnitude, in km/sec, of the difference in the pre- and post-maneuver velocity
    vectors in the direction of the pre-maneuver 'W' unit vector at the maneuver
    event time.
    """

    description: str
    """Description and notes of the maneuver."""

    descriptor: str
    """Optional source-provided and searchable metadata or descriptor of the data."""

    event_end_time: Annotated[Union[str, datetime], PropertyInfo(alias="eventEndTime", format="iso8601")]
    """Maneuver event end time in ISO 8601 UTC with microsecond precision."""

    event_id: Annotated[str, PropertyInfo(alias="eventId")]
    """Optional source-provided identifier for this maneuver event.

    In the case where multiple maneuver records are submitted for the same event,
    this field can be used to tie them together to the same event.
    """

    id_sensor: Annotated[str, PropertyInfo(alias="idSensor")]
    """
    Optional ID of the sensor that detected this maneuver (for example, if detected
    by passive RF anomalies).
    """

    maneuver_unc: Annotated[float, PropertyInfo(alias="maneuverUnc")]
    """Uncertainty in the occurrence of this maneuver (0 - 1)."""

    mnvr_accels: Annotated[Iterable[float], PropertyInfo(alias="mnvrAccels")]
    """Array of estimated acceleration values, in meters per second squared.

    Number of elements must match the numAccelPoints.
    """

    mnvr_accel_times: Annotated[Iterable[float], PropertyInfo(alias="mnvrAccelTimes")]
    """
    Array of elapsed times, in seconds from maneuver start time, at which each
    acceleration point is estimated. Number of elements must match the
    numAccelPoints.
    """

    mnvr_accel_uncs: Annotated[Iterable[float], PropertyInfo(alias="mnvrAccelUncs")]
    """
    Array of the 1-sigma uncertainties in estimated accelerations, in meters per
    second squared. Number of elements must match the numAccelPoints.
    """

    num_accel_points: Annotated[int, PropertyInfo(alias="numAccelPoints")]
    """The total number of estimated acceleration points during the maneuver."""

    num_obs: Annotated[int, PropertyInfo(alias="numObs")]
    """Number of observations used to generate the maneuver data."""

    od_fit_end_time: Annotated[Union[str, datetime], PropertyInfo(alias="odFitEndTime", format="iso8601")]
    """
    Maneuver orbit determination fit data end time in ISO 8601 UTC with microsecond
    precision.
    """

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_object_id: Annotated[str, PropertyInfo(alias="origObjectId")]
    """
    Identifier provided by source to indicate the target on-orbit object performing
    this maneuver. This may be an internal identifier and not necessarily a valid
    satellite number/ID.
    """

    orig_sensor_id: Annotated[str, PropertyInfo(alias="origSensorId")]
    """
    Optional identifier provided by source to indicate the sensor identifier used to
    detect this event. This may be an internal identifier and not necessarily a
    valid sensor ID.
    """

    post_apogee: Annotated[float, PropertyInfo(alias="postApogee")]
    """Post-event spacecraft apogee (measured from Earth center), in kilometers."""

    post_area: Annotated[float, PropertyInfo(alias="postArea")]
    """Estimated area of the object following the maneuver, in meters squared."""

    post_ballistic_coeff: Annotated[float, PropertyInfo(alias="postBallisticCoeff")]
    """Post-event ballistic coefficient.

    The units of the ballistic coefficient vary depending on provider. Users should
    consult the data provider to verify the units of the ballistic coefficient.
    """

    post_drift_rate: Annotated[float, PropertyInfo(alias="postDriftRate")]
    """Post-event GEO drift rate of the spacecraft, in degrees per day.

    Negative values indicate westward drift.
    """

    post_eccentricity: Annotated[float, PropertyInfo(alias="postEccentricity")]
    """Post-event spacecraft eccentricity."""

    post_event_elset: Annotated[ElsetIngestParam, PropertyInfo(alias="postEventElset")]
    """
    An element set is a collection of Keplerian orbital elements describing an orbit
    of a particular satellite. The data is used along with an orbit propagator in
    order to predict the motion of a satellite. The element set, or elset for short,
    consists of identification data, the classical elements and drag parameters.
    """

    post_event_id_elset: Annotated[str, PropertyInfo(alias="postEventIdElset")]
    """Optional identifier of the element set for the post-maneuver orbit."""

    post_event_id_state_vector: Annotated[str, PropertyInfo(alias="postEventIdStateVector")]
    """
    Optional identifier of the state vector for the post-maneuver trajectory of the
    spacecraft.
    """

    post_event_state_vector: Annotated[StateVectorIngestParam, PropertyInfo(alias="postEventStateVector")]
    """
    This service provides operations for querying and manipulation of state vectors
    for OnOrbit objects. State vectors are cartesian vectors of position (r) and
    velocity (v) that, together with their time (epoch) (t), uniquely determine the
    trajectory of the orbiting body in space. J2000 is the preferred coordinate
    frame for all state vector positions/velocities in UDL, but in some cases data
    may be in another frame depending on the provider and/or datatype. Please see
    the 'Discover' tab in the storefront to confirm coordinate frames by data
    provider.
    """

    post_geo_longitude: Annotated[float, PropertyInfo(alias="postGeoLongitude")]
    """
    Post-event spacecraft WGS-84 GEO belt longitude, represented as -180 to 180
    degrees (negative values west of Prime Meridian).
    """

    post_inclination: Annotated[float, PropertyInfo(alias="postInclination")]
    """Post-event spacecraft orbital inclination, in degrees. 0-180."""

    post_mass: Annotated[float, PropertyInfo(alias="postMass")]
    """Estimated mass of the object following the maneuver, in kg."""

    post_perigee: Annotated[float, PropertyInfo(alias="postPerigee")]
    """Post-event spacecraft perigee (measured from Earth center), in kilometers."""

    post_period: Annotated[float, PropertyInfo(alias="postPeriod")]
    """Post-event spacecraft orbital period, in minutes."""

    post_pos_x: Annotated[float, PropertyInfo(alias="postPosX")]
    """Post-event X component of position in ECI space, in km."""

    post_pos_y: Annotated[float, PropertyInfo(alias="postPosY")]
    """Post-event Y component of position in ECI space, in km."""

    post_pos_z: Annotated[float, PropertyInfo(alias="postPosZ")]
    """Post-event Z component of position in ECI space, in km."""

    post_raan: Annotated[float, PropertyInfo(alias="postRAAN")]
    """Post-event spacecraft Right Ascension of the Ascending Node (RAAN), in degrees."""

    post_radiation_press_coeff: Annotated[float, PropertyInfo(alias="postRadiationPressCoeff")]
    """Post-event radiation pressure coefficient.

    The units of the radiation pressure coefficient vary depending on provider.
    Users should consult the data provider to verify the units of the radiation
    pressure coefficient.
    """

    post_sigma_u: Annotated[float, PropertyInfo(alias="postSigmaU")]
    """
    Post-event standard deviation, in kilometers, of spacecraft position in the 'U'
    unit vector direction.
    """

    post_sigma_v: Annotated[float, PropertyInfo(alias="postSigmaV")]
    """
    Post-event standard deviation, in kilometers, of spacecraft position in the 'V'
    unit vector direction.
    """

    post_sigma_w: Annotated[float, PropertyInfo(alias="postSigmaW")]
    """
    Post-event standard deviation, in kilometers, of spacecraft position in the 'W'
    unit vector direction.
    """

    post_sma: Annotated[float, PropertyInfo(alias="postSMA")]
    """Post-event spacecraft Semi-Major Axis (SMA), in kilometers."""

    post_vel_x: Annotated[float, PropertyInfo(alias="postVelX")]
    """Post-event X component of velocity in ECI space, in km/sec."""

    post_vel_y: Annotated[float, PropertyInfo(alias="postVelY")]
    """Post-event Y component of velocity in ECI space, in km/sec."""

    post_vel_z: Annotated[float, PropertyInfo(alias="postVelZ")]
    """Post-event Z component of velocity in ECI space, in km/sec."""

    pre_apogee: Annotated[float, PropertyInfo(alias="preApogee")]
    """Pre-event spacecraft apogee (measured from Earth center), in kilometers."""

    pre_ballistic_coeff: Annotated[float, PropertyInfo(alias="preBallisticCoeff")]
    """Pre-event ballistic coefficient.

    The units of the ballistic coefficient vary depending on provider. Users should
    consult the data provider to verify the units of the ballistic coefficient.
    """

    pre_drift_rate: Annotated[float, PropertyInfo(alias="preDriftRate")]
    """Pre-event GEO drift rate of the spacecraft, in degrees per day.

    Negative values indicate westward drift.
    """

    pre_eccentricity: Annotated[float, PropertyInfo(alias="preEccentricity")]
    """Pre-event spacecraft eccentricity."""

    pre_event_elset: Annotated[ElsetIngestParam, PropertyInfo(alias="preEventElset")]
    """
    An element set is a collection of Keplerian orbital elements describing an orbit
    of a particular satellite. The data is used along with an orbit propagator in
    order to predict the motion of a satellite. The element set, or elset for short,
    consists of identification data, the classical elements and drag parameters.
    """

    pre_event_id_elset: Annotated[str, PropertyInfo(alias="preEventIdElset")]
    """Optional identifier of the element set for the pre-maneuver orbit."""

    pre_event_id_state_vector: Annotated[str, PropertyInfo(alias="preEventIdStateVector")]
    """
    Optional identifier of the state vector for the pre-maneuver trajectory of the
    spacecraft.
    """

    pre_event_state_vector: Annotated[StateVectorIngestParam, PropertyInfo(alias="preEventStateVector")]
    """
    This service provides operations for querying and manipulation of state vectors
    for OnOrbit objects. State vectors are cartesian vectors of position (r) and
    velocity (v) that, together with their time (epoch) (t), uniquely determine the
    trajectory of the orbiting body in space. J2000 is the preferred coordinate
    frame for all state vector positions/velocities in UDL, but in some cases data
    may be in another frame depending on the provider and/or datatype. Please see
    the 'Discover' tab in the storefront to confirm coordinate frames by data
    provider.
    """

    pre_geo_longitude: Annotated[float, PropertyInfo(alias="preGeoLongitude")]
    """
    Pre-event spacecraft WGS-84 GEO belt longitude, represented as -180 to 180
    degrees (negative values west of Prime Meridian).
    """

    pre_inclination: Annotated[float, PropertyInfo(alias="preInclination")]
    """Pre-event spacecraft orbital inclination, in degrees. 0-180."""

    pre_perigee: Annotated[float, PropertyInfo(alias="prePerigee")]
    """Pre-event spacecraft perigee (measured from Earth center), in kilometers."""

    pre_period: Annotated[float, PropertyInfo(alias="prePeriod")]
    """Pre-event spacecraft orbital period, in minutes."""

    pre_pos_x: Annotated[float, PropertyInfo(alias="prePosX")]
    """Pre-event X component of position in ECI space, in km."""

    pre_pos_y: Annotated[float, PropertyInfo(alias="prePosY")]
    """Pre-event Y component of position in ECI space, in km."""

    pre_pos_z: Annotated[float, PropertyInfo(alias="prePosZ")]
    """Pre-event Z component of position in ECI space, in km."""

    pre_raan: Annotated[float, PropertyInfo(alias="preRAAN")]
    """Pre-event spacecraft Right Ascension of the Ascending Node (RAAN), in degrees."""

    pre_radiation_press_coeff: Annotated[float, PropertyInfo(alias="preRadiationPressCoeff")]
    """Pre-event radiation pressure coefficient.

    The units of the radiation pressure coefficient vary depending on provider.
    Users should consult the data provider to verify the units of the radiation
    pressure coefficient.
    """

    pre_sigma_u: Annotated[float, PropertyInfo(alias="preSigmaU")]
    """
    Pre-event standard deviation, in kilometers, of spacecraft position in the 'U'
    unit vector direction.
    """

    pre_sigma_v: Annotated[float, PropertyInfo(alias="preSigmaV")]
    """
    Pre-event standard deviation, in kilometers, of spacecraft position in the 'V'
    unit vector direction.
    """

    pre_sigma_w: Annotated[float, PropertyInfo(alias="preSigmaW")]
    """
    Pre-event standard deviation, in kilometers, of spacecraft position in the 'W'
    unit vector direction.
    """

    pre_sma: Annotated[float, PropertyInfo(alias="preSMA")]
    """Pre-event spacecraft orbital Semi-Major Axis (SMA), in kilometers."""

    pre_vel_x: Annotated[float, PropertyInfo(alias="preVelX")]
    """Pre-event X component of velocity in ECI space, in km/sec."""

    pre_vel_y: Annotated[float, PropertyInfo(alias="preVelY")]
    """Pre-event Y component of velocity in ECI space, in km/sec."""

    pre_vel_z: Annotated[float, PropertyInfo(alias="preVelZ")]
    """Pre-event Z component of velocity in ECI space, in km/sec."""

    report_time: Annotated[Union[str, datetime], PropertyInfo(alias="reportTime", format="iso8601")]
    """
    The time that the report or alert of this maneuver was generated, in ISO 8601
    UTC format.
    """

    sat_no: Annotated[int, PropertyInfo(alias="satNo")]
    """Satellite/Catalog number of the target on-orbit object."""

    sourced_data: Annotated[List[str], PropertyInfo(alias="sourcedData")]
    """
    Optional array of UDL data (elsets, state vectors, etc) UUIDs used to build this
    maneuver. See the associated sourcedDataTypes array for the specific types of
    data for the positionally corresponding UUIDs in this array (the two arrays must
    match in size).
    """

    sourced_data_types: Annotated[
        List[Literal["EO", "RADAR", "RF", "DOA", "ELSET", "SV"]], PropertyInfo(alias="sourcedDataTypes")
    ]
    """Optional array of UDL data types used to build this maneuver (e.g.

    EO, RADAR, RF, DOA, ELSET, SV). See the associated sourcedData array for the
    specific UUIDs of data for the positionally corresponding data types in this
    array (the two arrays must match in size).
    """

    state_model: Annotated[str, PropertyInfo(alias="stateModel")]
    """Name of the state model used to generate the maneuver data."""

    state_model_version: Annotated[float, PropertyInfo(alias="stateModelVersion")]
    """Version of the state model used to generate the maneuver data."""

    status: str
    """Status of this maneuver (CANCELLED, PLANNED, POSSIBLE, REDACTED, VERIFIED).

    CANCELLED: A previously planned maneuver whose execution was cancelled.

    PLANNED: A maneuver planned to take place at the eventStartTime.

    POSSIBLE: A possible maneuver detected by observation of the spacecraft or by
    evaluation of the spacecraft orbit.

    REDACTED: A redaction of a reported possible maneuver that has been determined
    to have not taken place after further observation/evaluation.

    VERIFIED: A maneuver whose execution has been verified, either by the
    owner/operator or observation/evaluation.
    """

    tags: List[str]
    """
    Optional array of provider/source specific tags for this data, where each
    element is no longer than 32 characters, used for implementing data owner
    conditional access controls to restrict access to the data. Should be left null
    by data providers unless conditional access controls are coordinated with the
    UDL team.
    """

    total_burn_time: Annotated[float, PropertyInfo(alias="totalBurnTime")]
    """The estimated total active burn time of a maneuver, in seconds.

    This includes the sum of all burns in numAccelPoints. Not to be confused with
    the total duration of the maneuver.
    """

    transaction_id: Annotated[str, PropertyInfo(alias="transactionId")]
    """
    Optional identifier to track a commercial or marketplace transaction executed to
    produce this data.
    """

    uct: bool
    """Boolean indicating this maneuver was unable to be correlated to a known object.

    This flag should only be set to true by data providers after an attempt to
    correlate to an on-orbit object was made and failed. If unable to correlate, the
    'origObjectId' field may be populated with an internal data provider specific
    identifier.
    """
