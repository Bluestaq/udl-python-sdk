# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Union, Iterable
from datetime import datetime
from typing_extensions import Literal, Required, Annotated, TypedDict

from .._utils import PropertyInfo

__all__ = ["CrewFileCreateParams", "Body", "BodyCrewMember"]


class CrewFileCreateParams(TypedDict, total=False):
    body: Required[Iterable[Body]]


class BodyCrewMember(TypedDict, total=False):
    branch: str
    """The military branch assignment of the crew member."""

    civilian: bool
    """Flag indicating this crew member is a civilian or non-military person."""

    commander: bool
    """Flag indicating this person is the aircraft commander."""

    crew_position: Annotated[str, PropertyInfo(alias="crewPosition")]
    """The crew position of the crew member."""

    dod_id: Annotated[str, PropertyInfo(alias="dodID")]
    """The crew member's 10-digit DoD ID number."""

    duty_position: Annotated[str, PropertyInfo(alias="dutyPosition")]
    """The duty position of the crew member."""

    first_name: Annotated[str, PropertyInfo(alias="firstName")]
    """The first name of the crew member."""

    last4_ssn: Annotated[str, PropertyInfo(alias="last4SSN")]
    """Last four digits of the crew member's social security number."""

    last_name: Annotated[str, PropertyInfo(alias="lastName")]
    """The last name of the crew member."""

    member_id: Annotated[str, PropertyInfo(alias="memberId")]
    """Unique identifier of the crew member assigned by the originating source."""

    member_remarks: Annotated[str, PropertyInfo(alias="memberRemarks")]
    """Remarks concerning the crew member."""

    member_type: Annotated[str, PropertyInfo(alias="memberType")]
    """Amplifying details about the crew member type (e.g.

    RAVEN, FCC, COMCAM, AIRCREW, MEP, OTHER, etc.).
    """

    middle_initial: Annotated[str, PropertyInfo(alias="middleInitial")]
    """The middle initial of the crew member."""

    rank: str
    """The rank of the crew member."""

    squadron: str
    """The squadron the crew member serves."""

    username: str
    """The Mattermost username of this crew member."""

    wing: str
    """The wing the crew member serves."""


class Body(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    orig_crew_id: Required[Annotated[str, PropertyInfo(alias="origCrewId")]]
    """Unique identifier of the formed crew provided by the originating source.

    Provided for systems that require tracking of an internal system generated ID.
    """

    source: Required[str]
    """Source of the data."""

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    adj_return_time: Annotated[Union[str, datetime], PropertyInfo(alias="adjReturnTime", format="iso8601")]
    """Adjusted return time in ISO 8601 UTC format with millisecond precision."""

    adj_return_time_approver: Annotated[str, PropertyInfo(alias="adjReturnTimeApprover")]
    """Last name of the adjusted return time approver."""

    aircraft_mds: Annotated[str, PropertyInfo(alias="aircraftMDS")]
    """The aircraft Model Design Series designation assigned for this crew."""

    alerted_time: Annotated[Union[str, datetime], PropertyInfo(alias="alertedTime", format="iso8601")]
    """Time the crew was alerted, in ISO8601 UTC format, with millisecond precision."""

    arms_crew_unit: Annotated[str, PropertyInfo(alias="armsCrewUnit")]
    """The crew's Aviation Resource Management System (ARMS) unit.

    If multiple units exist, use the Aircraft Commander's Unit.
    """

    arr_icao: Annotated[str, PropertyInfo(alias="arrICAO")]
    """Arrival location for the itinerary point.

    Intended to be an ICAO, but an air refueling track short name or drop zone ID
    can be used.
    """

    crew_home: Annotated[bool, PropertyInfo(alias="crewHome")]
    """
    Flag indicating whether this crew task takes the crew home and out of the stage.
    """

    crew_members: Annotated[Iterable[BodyCrewMember], PropertyInfo(alias="crewMembers")]
    """CrewMembers Collection."""

    crew_name: Annotated[str, PropertyInfo(alias="crewName")]
    """Name of the formed crew."""

    crew_squadron: Annotated[str, PropertyInfo(alias="crewSquadron")]
    """The squadron the crew serves."""

    crew_type: Annotated[str, PropertyInfo(alias="crewType")]
    """Crew type."""

    crew_wing: Annotated[str, PropertyInfo(alias="crewWing")]
    """The wing the crew serves."""

    current_icao: Annotated[str, PropertyInfo(alias="currentICAO")]
    """
    The International Civil Aviation Organization (ICAO) code of the airfield at
    which the crew is currently located.
    """

    dep_icao: Annotated[str, PropertyInfo(alias="depICAO")]
    """Departure location for the itinerary point.

    Intended to be an ICAO, but an air refueling track short name or drop zone ID
    can be used.
    """

    est_arr_time: Annotated[Union[str, datetime], PropertyInfo(alias="estArrTime", format="iso8601")]
    """
    The estimated time of arrival at the arrival site (arrICAO) for the crew in ISO
    8601 UTC format with millisecond precision.
    """

    est_dep_time: Annotated[Union[str, datetime], PropertyInfo(alias="estDepTime", format="iso8601")]
    """
    The estimated time of departure for the crew in ISO 8601 UTC format with
    millisecond precision.
    """

    fdp_elig_type: Annotated[str, PropertyInfo(alias="fdpEligType")]
    """Crew Flight Duty Period (FDP) eligibility type."""

    fdp_type: Annotated[str, PropertyInfo(alias="fdpType")]
    """Flight Duty Period (FDP) type."""

    female_enlisted_qty: Annotated[int, PropertyInfo(alias="femaleEnlistedQty")]
    """The number of female enlisted crew members."""

    female_officer_qty: Annotated[int, PropertyInfo(alias="femaleOfficerQty")]
    """The number of female officer crew members."""

    id_sortie: Annotated[str, PropertyInfo(alias="idSortie")]
    """Unique identifier of the Aircraft Sortie associated with this crew record."""

    init_start_time: Annotated[Union[str, datetime], PropertyInfo(alias="initStartTime", format="iso8601")]
    """Initial start time of the linked task that was delinked due to mission closure."""

    legal_alert_time: Annotated[Union[str, datetime], PropertyInfo(alias="legalAlertTime", format="iso8601")]
    """
    Time the crew is legal for alert, in ISO8601 UTC format, with millisecond
    precision.
    """

    legal_bravo_time: Annotated[Union[str, datetime], PropertyInfo(alias="legalBravoTime", format="iso8601")]
    """
    Time the crew is legal for bravo, in ISO8601 UTC format, with millisecond
    precision.
    """

    linked_task: Annotated[bool, PropertyInfo(alias="linkedTask")]
    """Flag indicating whether this crew is part of a linked flying task."""

    male_enlisted_qty: Annotated[int, PropertyInfo(alias="maleEnlistedQty")]
    """The number of male enlisted crew members."""

    male_officer_qty: Annotated[int, PropertyInfo(alias="maleOfficerQty")]
    """The number of male officer crew members."""

    mission_id: Annotated[str, PropertyInfo(alias="missionId")]
    """The mission ID the crew is supporting according to the source system."""

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    post_rest_applied: Annotated[bool, PropertyInfo(alias="postRestApplied")]
    """
    Flag indicating whether post-mission crew rest is applied to the last sortie of
    a crew's task.
    """

    pre_rest_applied: Annotated[bool, PropertyInfo(alias="preRestApplied")]
    """
    Flag indicating whether pre-mission crew rest is applied to the first sortie of
    a crew's task.
    """

    return_time: Annotated[Union[str, datetime], PropertyInfo(alias="returnTime", format="iso8601")]
    """Scheduled return time, in ISO8601 UTC format, with millisecond precision."""

    stage_time: Annotated[Union[str, datetime], PropertyInfo(alias="stageTime", format="iso8601")]
    """
    Time the crew entered the stage in ISO 8601 UTC format with millisecond
    precision.
    """

    status: str
    """Crew status (e.g.

    NEEDCREW, ASSIGNED, APPROVED, NOTIFIED, PARTIAL, UNKNOWN, etc.).
    """
