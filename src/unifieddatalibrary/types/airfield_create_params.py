# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing_extensions import Literal, Required, Annotated, TypedDict

from .._utils import PropertyInfo

__all__ = ["AirfieldCreateParams"]


class AirfieldCreateParams(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    name: Required[str]
    """The name of the airfield."""

    source: Required[str]
    """Source of the data."""

    type: Required[str]
    """The airfield activity use type (e.g.

    Commercial, Airport, Heliport, Gliderport, etc.).
    """

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    alt_airfield_id: Annotated[str, PropertyInfo(alias="altAirfieldId")]
    """Alternate Airfield identifier provided by source."""

    city: str
    """Closest city to the airfield's location."""

    country_code: Annotated[str, PropertyInfo(alias="countryCode")]
    """The country code.

    This value is typically the ISO 3166 Alpha-2 two-character country code, however
    it can also represent various consortiums that do not appear in the ISO
    document. The code must correspond to an existing country in the UDLâ€™s country
    API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code,
    or alternate code values that exist for the specified country code.
    """

    elev_ft: Annotated[float, PropertyInfo(alias="elevFt")]
    """
    Elevation of the airfield above mean sea level, in feet. Note: The corresponding
    equivalent field is not converted by the UDL and may or may not be supplied by
    the provider. The provider/consumer is responsible for all unit conversions.
    """

    elev_m: Annotated[float, PropertyInfo(alias="elevM")]
    """
    Elevation of the airfield above mean sea level, in meters. Note: The
    corresponding equivalent field is not converted by the UDL and may or may not be
    supplied by the provider. The provider/consumer is responsible for all unit
    conversions.
    """

    faa: str
    """The Federal Aviation Administration (FAA) location identifier of this airfield."""

    geoloc: str
    """Air Force geographic location code of the airfield."""

    gmt_offset: Annotated[str, PropertyInfo(alias="gmtOffset")]
    """
    Time difference between the location of the airfield and the Greenwich Mean Time
    (GMT), expressed as +/-HH:MM. Time zones east of Greenwich have positive offsets
    and time zones west of Greenwich are negative.
    """

    host_nat_code: Annotated[str, PropertyInfo(alias="hostNatCode")]
    """The host nation code of this airfield, used for non-DoD/FAA locations."""

    iata: str
    """The International Aviation Transport Association (IATA) code of the airfield."""

    icao: str
    """The International Civil Aviation Organization (ICAO) code of the airfield."""

    id_site: Annotated[str, PropertyInfo(alias="idSite")]
    """The ID of the parent site."""

    info_url: Annotated[str, PropertyInfo(alias="infoURL")]
    """The URL link to information about airfield."""

    lat: float
    """WGS84 latitude of the location, in degrees.

    -90 to 90 degrees (negative values south of equator).
    """

    lon: float
    """WGS84 longitude of the location, in degrees.

    -180 to 180 degrees (negative values west of Prime Meridian).
    """

    mag_dec: Annotated[float, PropertyInfo(alias="magDec")]
    """
    The magnetic declination/variation of the airfield's location from true north,
    in degrees. Positive values east of true north and negative values west of true
    north.
    """

    max_runway_length: Annotated[int, PropertyInfo(alias="maxRunwayLength")]
    """The length of the longest runway at this airfield in feet."""

    misc_codes: Annotated[str, PropertyInfo(alias="miscCodes")]
    """
    Applicable miscellaneous codes according to the Airfield Suitability and
    Restrictions Report (ASRR) for this airfield.
    """

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    region_name: Annotated[str, PropertyInfo(alias="regionName")]
    """Region where the airfield resides."""

    runways: int
    """The number of runways at the site."""

    state: str
    """State or province of the airfield's location."""

    suitability_codes: Annotated[str, PropertyInfo(alias="suitabilityCodes")]
    """
    Associated suitability codes according to the Airfield Suitability and
    Restrictions Report (ASRR) for this airfield.
    """

    wac_innr: Annotated[str, PropertyInfo(alias="wacINNR")]
    """The airfield's World Area Code installation number (WAC-INNR)."""

    zar_id: Annotated[str, PropertyInfo(alias="zarId")]
    """Air Mobility Command (AMC) Zone availability Report identifier."""
